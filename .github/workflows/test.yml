name: Test role
on:
  push:
    branches:
      - "*"
      - "!main"
    pull_request:
      branches: [ main ]

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
      - name: Install Windows Collection
        run: ansible-galaxy collection install community.windows
      - name: Lint Ansible Playbook
        uses: ansible-community/ansible-lint-action@v6.5.2

  test:
    needs: lint
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v2
      - uses: msys2/setup-msys2@v2
        with:
          update: true
          install: base-devel git gcc msys2-devel python3 python3-pip libffi libffi-devel libcrypt libcrypt-devel openssl openssl-devel
      - name: Download ConfigureRemotingForAnsible.ps1
        run: wget https://raw.githubusercontent.com/ansible/ansible/devel/examples/scripts/ConfigureRemotingForAnsible.ps1 -Outfile ConfigureRemotingForAnsible.ps1
        shell: powershell
      - name: Run ConfigureRemotingForAnsible.ps1
        run: .\ConfigureRemotingForAnsible.ps1 -Verbose -GlobalHttpFirewallAccess -ForceNewSSLCert
        shell: powershell
      - name: Prepare Administrator user
        run: |
          $password = ConvertTo-SecureString "Password123" -AsPlainText -Force
          New-LocalUser "Ansible" -Password $password -Description "Ansible remoting user"
          Add-LocalGroupMember -Group Administrators -Member Ansible
          Enable-LocalUser -Name "Ansible"
        shell: powershell
      - name: Update pip and setuptools
        shell: msys2 {0}
        run: CFLAGS=-I/usr/lib/libffi-3.2.1/include python -m pip install --upgrade pip setuptools
      - name: Install Ansible
        shell: msys2 {0}
        run: CFLAGS=-I/usr/lib/libffi-3.2.1/include python -m pip install cryptography==3.3.2 wheel setuptools-rust ansible pywinrm
      - name: Run Ansible playbook
        shell: msys2 {0}
        run: |
          ansible-playbook -i .github/scripts/inventory .github/scripts/playbook.yml
